内部类：一般的类只有两种作用域，一种是包内（省略控制符）一种是加public控制符。
              内部类一般有4中控制符：同一个类，同一个包，父子类和任何位置。


垃圾回收：垃圾回收机制只负责内存中的对象，不会回收任何物理资源（当程序创建对象，数组等引用的类型实体时，系统都会在堆内存中为之分配一块内存）
                   程序无法精确的控制垃圾回收的运行，垃圾回收总会在合适的时候进行。
******      垃圾回收机制回收任何对象之前都会调用finalize方法，该方法可能使该对象重新复活，从而导致垃圾回收机制取消回收


对象在内存中的状态：激活状态：被创建的时候，有一个以上的引用变量使用它时。则这个对象在程序中处于激活状态。
                                     去活状态：如果程序中某个对象不再有任何引用变量引用他，他就进入去活状态。
                                     死亡状态：当对象与所有的引用变量的关联都切断时。且系统调用对象的finalize方法之后也没有激活。

                                     gc：静态方法：system.gc（）
                                     runtime对象的gc（）实例方法：runtime.getRuntime().gc()



异常： try catch：用户根据异常类型来处理程序。throws异常表示不知道如何处理异常，交给jvm处理当前异常

*****当使用throws抛出异常时。子类继承父类时其抛出的异常也要跟父类相等或者是父类异常的子类，子类方法中不能抛出比父类更多的异常。


*****如果程序员要抛出一些逻辑上不符合的异常时（自定义异常）使用throw抛出


******父类可以强制转换成子类，但是子类不能强制转换为父类。如果要这样可以定义父类的引用：animal a = new cat（）；


*******************************
类初始过程：
JVM进程停止：正常结束，system.exit();runtime.getruntime().exit();程序运行工程中遇到未捕获异常；平台强制退出；

（类的加载，类的链接，类的初始化；）


系统初始化该类或接口：
1创建类实例
2调用某个类的静态方法
3访问某个类或接口的静态属性，或为该静态属性赋值
4使用反射强制创建某个类或接口
5初始化某个类的子类，
6直接使用java.exe命令来运行某个主类



